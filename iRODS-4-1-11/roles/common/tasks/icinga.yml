---
#VARIABLES
#---------------
# fwz
# ansible_fqdn
# icingaTkt
#---------------

#FILES USED
#------------------------------------
# files/icinga/check_mem.pl
# files/icinga/cron_nagios_updates.sh
# files/icinga/check_updates.pl
# files/icinga/check_mount
#------------------------------------




#Installs Icinga2 Repo
- name: Installing Icinga2 Repository
  yum:
    name: https://packages.icinga.com/epel/icinga-rpm-release-7-latest.noarch.rpm
    state: latest
 
#Firewall adjustments for Icinga
#Remove current "deny all" rule    
- name: IPTables Remove deny all
  iptables: 
    chain: INPUT
    jump: DROP
    state: absent
  when: fwd == 0
- name: IPTables INPUT 5665 appended
  iptables: 
    chain: INPUT 
    protocol: TCP 
    destination_port: 5665 
    jump: ACCEPT
  when: fwd == 0
- name: IPTABLES INPUT Default Drop
  iptables: 
    chain: INPUT 
    jump: DROP
  when: fwd == 0

- name: FirewallD TCP5665 for Icinga2
  firewalld:
      rich_rule: 'rule port port=5665 protocol=tcp accept'
      permanent: true
      zone: "{{fwz}}"
      state: enabled
      immediate: true
  when: fwd == 1

#Icinga installs
- name: Installing Icinga2, Nagios Plugins, Icinga SELinux & Icinga VIM if missing, not updating.
  yum:
    name: icinga2, nagios-plugins-all, icinga2-selinux.x86_64, vim-icinga2.x86_64, perl-Data-Dumper
    state: present
  

- name: install pip
  yum:
    name: python2-pip
    state: latest
  
- name: install python expect plugin
  pip:
    name: pexpect
  
- name: run icinga2 script
  expect:
    creates: "/var/lib/icinga2/api/zones/global-templates/_etc/services.conf"
    command: "/sbin/icinga2 node wizard"
    responses:
      Please specify if this is a satellite/client setup : "Y"
      Please specify the common name : "{{ansible_fqdn}}"
      Master/Satellite Common Name : "watchtower.grid.surfsara.nl"
      Do you want to establish a connection to the parent : "Y"
      Master/Satellite endpoint host : "watchtower.grid.surfsara.nl"
      Master/Satellite endpoint port : "5665"
      Add more master/satellite endpoints? : "N"
      Is this information correct? : "Y"
      Hint : "{{icingaTkt}}"
      Bind Host : ""
      Bind Port : ""
      Accept config from parent node? : "Y"
      Accept commands from parent node? : "Y"


#Preventing conf.d conflicts with zone push
- name: Ignoring local Icinga2 conf.d
  lineinfile:
    line: '//include_recursive "conf.d"'
    regexp: 'include_recursive "conf.d"'
    backrefs: yes
    path: /etc/icinga2/icinga2.conf
      

#Copying check_mem for Icinga
- name: Copying check_mem for Icinga
  copy:
    src: files/icinga/check_mem.pl
    dest: /usr/lib64/nagios/plugins/check_mem.pl
    owner: root
    group: root
    mode: 0755
  
- name: Copying cron shell script for Icinga Update Check service
  copy:
    src: files/icinga/cron_nagios_updates.sh
    dest: /etc/cron.d/cron_nagios_updates.sh
    owner: root
    group: root
    mode: 0755
  
- name: Running first time Icinga Update Check if required
  command: /bin/sh /etc/cron.d/cron_nagios_updates.sh
  args:
    creates: /tmp/nagios/update_list
  
- name: Copying the check_updates script for Icinga checks
  copy:
    src: files/icinga/check_updates.pl 
    dest: /usr/lib64/nagios/plugins/check_updates.pl 
    owner: root
    group: root
    mode: 0755
  
- name: Copying check_mount for Icinga NFS checks
  copy: 
    src: files/icinga/check_mount
    dest:  /usr/lib64/nagios/plugins/check_mount
    owner: root
    group: root
    mode: 0755
  
#Crontab modifications and requirements
- name: Adding hourly check to crontab for Icinga2 Updates check
  lineinfile:
    path: /etc/crontab
    state: present
    line: '0 * * * * root /etc/cron.d/cron_nagios_updates.sh'
  #Restarting Icinga2 on server
- name: Restarting Icinga2 daemon
  systemd:
    name: icinga2
    state: restarted
    enabled: yes
  
